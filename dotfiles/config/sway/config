# Sway config
# Read `man 5 sway` for a complete reference.

### Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down t
set $up n
set $right s

# Your preferred terminal emulator
set $term {{@@ env['HOME'] @@}}/bin/launch-terminal

# Your preferred application launcher
#set $menu dmenu_run
set $menu {{@@ env['HOME'] @@}}/bin/rofi-run

# Password manager
set $pwman {{@@ env['HOME'] @@}}/bin/rofi-lpass-run

# Wallpaper
{%@@ if profile == 'tiny' @@%}
set $wallpaper {{@@ env['HOME'] @@}}/Pictures/Wallpaper/WallpapersCraft/forest_fog_trees_126479_3840x2400.jpg
{%@@ elif profile == 'nova' @@%}
set $wallpaper /usr/share/backgrounds/glowing_lake.jpg
{%@@ elif profile == 'syl' @@%}
set $wallpaper /usr/share/backgrounds/LogicWavelength_wood-logo.jpg
{%@@ elif profile == 'azrahn' @@%}
set $wallpaper {{@@ env['HOME'] @@}}/Pictures/Wallpaper/WallpapersCraft/starry_sky_trees_stars_night_118267_3840x2400.jpg
{%@@ elif profile == 'DE2NTB0027' @@%}
set $wallpaper /usr/share/wallpapers/Path/contents/images/2560x1600.jpg
{%@@ else @@%}
set $wallpaper /usr/share/backgrounds/lunix_manjaro059I3.jpg
{%@@ endif @@%}

### Configuration
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
{%@@ if profile == 'tiny' @@%}
font pango:Input Sans Narrow,Icons 7
{%@@ elif profile == 'DE2NTB0027' @@%}
font pango:League Mono Narrow,Icons 11
{%@@ else @@%}
font pango:glisp,Icons 8
{%@@ endif @@%}

# Hide vertical borders at the edge of the screen
hide_edge_borders both

# New container tiling mode
workspace_layout tabbed

# Don't steal focus
focus_on_window_activation urgent

# Wrap focus around within containers
focus_wrapping yes

# Don't move the mouse pointer on me!
mouse_warping none

### Output configuration
# You can get the names of your outputs by running: swaymsg -t get_outputs
output * bg $wallpaper fill
{%@@ if profile == 'tiny' @@%}
set $primary_output eDP-1
output $primary_output pos 500 1440 res 3200x1800 scale 2
output "LG Electronics LG ULTRAWIDE 0x00006BA7" pos 0 0 res 3440x1440 scale 1
{%@@ elif profile == 'syl' @@%}
set $primary_output eDP-1
output $primary_output pos 0 800 res 1920x1080 scale 1
output DP-1 pos 1920 0 res 3440x1440 scale 1
{%@@ elif profile == 'nova' @@%}
set $primary_output "LG Display 0x0621 Unknown"
output $primary_output pos 380 1440 res 1920x1080 scale 1
output "LG Electronics LG ULTRAWIDE 0x00006BA7" pos 0 0 res 3440x1440 scale 1
output "Samsung Electric Company C49J89x HNTR100972" pos 760 360 res 3840x1080 scale 1
output DP-1 pos 2300 1080 res 3440x1440 scale 1
{%@@ elif profile == 'DE2NTB0027' @@%}
set $primary_output eDP-1
output $primary_output pos 3840 0 res 2560x1600 scale 1
output "Ancor Communications Inc MX279 DALMRS001872" pos 0 0 res 1920x1080 scale 1
output "Ancor Communications Inc MX279 FCLMRS003146" pos 1920 0 res 1920x1080 scale 1
{%@@ endif @@%}

{%@@ if profile in ('tiny', 'syl', 'nova', 'DE2NTB0027') @@%}
bindswitch --reload --locked lid:on output $primary_output disable
bindswitch --reload --locked lid:off output $primary_output enable

exec_always "{{@@ env['HOME'] @@}}/.config/sway/scripts/detect-clamshell-mode.sh" $primary_output
{%@@ endif @@%}

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
{%@@ if profile == 'tiny' @@%}
input "1739:30662:Synaptics_TM3066-002" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    click_method clickfinger
    scroll_method two_finger
    events disabled_on_external_mouse
}
input "1267:8687:ELAN21EF:00_04F3:21EF" {
    map_to_output eDP-1
    events disabled
}
{%@@ elif profile == 'nova' @@%}
input "10248:258:FTCS1000:00_2808:0102_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    click_method clickfinger
    scroll_method two_finger
    events disabled_on_external_mouse
}
{%@@ elif profile == 'syl' @@%}
input "2:14:ETPS/2_Elantech_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    click_method clickfinger
    scroll_method two_finger
    events disabled_on_external_mouse
}
{%@@ elif profile == 'azrahn' @@%}
input "1739:52653:CUST0001:00_06CB:CDAD_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    click_method clickfinger
    scroll_method two_finger
    events disabled_on_external_mouse
}
{%@@ elif profile == 'DE2NTB0027' @@%}
input "2362:597:UNIW0001:00_093A:0255_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    click_method clickfinger
    scroll_method two_finger
    events disabled_on_external_mouse
}
{%@@ endif @@%}

# For all machines:
input "1:1:AT_Translated_Set_2_keyboard" {
    #xkb_layout us,us,us,us
    #xkb_variant dvorak,dvorak-intl,dvorak-alt-intl,
    #xkb_options ctrl:nocaps,altwin:swap_lalt_lwin,lv3:ralt_switch,compose:lctrl,eurosign:5,nbsp:zwnj2nb3nnb4,terminate:ctrl_alt_bksp
    xkb_layout us
    xkb_variant dvorak
    xkb_options ctrl:nocaps,altwin:swap_lalt_lwin,lv3:ralt_switch,compose:lctrl,eurosign:5
    xkb_numlock enabled
}

input "19280:61325:KP_Republic_BM60_RGB_POKER" {
    #xkb_layout us,us,us,us
    #xkb_variant dvorak,dvorak-intl,dvorak-alt-intl,
    #xkb_options ctrl:nocaps,altwin:swap_lalt_lwin,lv3:ralt_switch,compose:lctrl,eurosign:5,nbsp:zwnj2nb3nnb4,terminate:ctrl_alt_bksp
    xkb_layout us
    xkb_variant dvorak
    xkb_options ctrl:nocaps,altwin:swap_lalt_lwin,lv3:ralt_switch,compose:lctrl,eurosign:5
    xkb_numlock enabled
}

input "65261:51921:David_H._Bronke_Dactyl_Lynx" {
    xkb_layout us
    xkb_options compose:menu
    xkb_numlock enabled
}

input "12346:16452:Svalboard_lightly" {
    xkb_layout us
    xkb_options compose:menu
    xkb_numlock enabled
}

input "12346:16452:Svalboard_lightly_Keyboard" {
    xkb_layout us
    xkb_options compose:menu
    xkb_numlock enabled
}

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+C kill

    # start your launcher
    bindsym $mod+p exec $menu
    bindsym $mod+Shift+P exec rofi -modi run -show run

    # password manager
    bindsym $mod+Ctrl+P exec $pwman

    # emoji chooser
    bindsym $mod+e exec rofimoji --skin-tone neutral

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # exit sway (logs you out of your wayland session)
    bindsym $mod+Shift+e exit

    # Lock the screen
    bindsym $mod+l exec --no-startup-id ~/bin/swayexit lock

    # List keybindings
    bindsym $mod+slash exec --no-startup-id ~/bin/sway-help

#
# Miscellaneous:
#
    # Volume controls
    bindsym --locked $mod+Prior exec --no-startup-id ponymix -N -t sink increase 2
    bindsym --locked $mod+Next exec --no-startup-id ponymix -N -t sink decrease 2
    bindsym --locked XF86AudioRaiseVolume exec --no-startup-id ponymix -N -t sink increase 2
    bindsym --locked XF86AudioLowerVolume exec --no-startup-id ponymix -N -t sink decrease 2
    bindsym --locked XF86AudioMute exec --no-startup-id ponymix -N -t sink toggle
    bindsym --locked XF86AudioMicMute exec --no-startup-id ponymix -N -t source toggle

    # Keyboard indicators
    #bindsym --release Caps_Lock exec pkill -SIGRTMIN+11 i3blocks
    #bindsym --release Num_Lock exec pkill -SIGRTMIN+11 i3blocks

    # Touchpad
{%@@ if profile == 'tiny' @@%}
    bindsym XF86TouchpadToggle input "1739:30662:Synaptics_TM3066-002" events toggle
{%@@ elif profile == 'nova' @@%}
    bindsym XF86TouchpadToggle input "10248:258:FTCS1000:00_2808:0102_Touchpad" events toggle
{%@@ elif profile == 'syl' @@%}
    bindsym XF86TouchpadToggle input "2:14:ETPS/2_Elantech_Touchpad" events toggle
{%@@ elif profile == 'azrahn' @@%}
    bindsym XF86TouchpadToggle input "2:7:SynPS/2_Synaptics_TouchPad" events toggle
{%@@ endif @@%}

#
# Moving around:
#
    # Change focus
    bindsym $mod+h focus parent; focus left
    bindsym $mod+t focus parent; focus down
    bindsym $mod+n focus parent; focus up
    bindsym $mod+s focus parent; focus right

    bindsym $mod+o focus left
    bindsym $mod+u focus right

    # alternatively, you can use the cursor keys:
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Window switcher
    bindsym $mod+Tab exec i3wins

    # Move focused window
    bindsym $mod+Shift+H move left
    bindsym $mod+Shift+T move down
    bindsym $mod+Shift+N move up
    bindsym $mod+Shift+S move right

    bindsym $mod+Shift+o move left
    bindsym $mod+Shift+u move right

    # Move current workspace
    bindsym $mod+Ctrl+h move workspace to output left
    bindsym $mod+Ctrl+t move workspace to output down
    bindsym $mod+Ctrl+n move workspace to output up
    bindsym $mod+Ctrl+s move workspace to output right

    # alternatively, you can use the cursor keys:
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    ## Move your focus around
    #bindsym $mod+$left focus left
    #bindsym $mod+$down focus down
    #bindsym $mod+$up focus up
    #bindsym $mod+$right focus right
    ## or use $mod+[up|down|left|right]
    #bindsym $mod+Left focus left
    #bindsym $mod+Down focus down
    #bindsym $mod+Up focus up
    #bindsym $mod+Right focus right

    ## _move_ the focused window with the same, but add Shift
    #bindsym $mod+Shift+$left move left
    #bindsym $mod+Shift+$down move down
    #bindsym $mod+Shift+$up move up
    #bindsym $mod+Shift+$right move right
    ## ditto, with arrow keys
    #bindsym $mod+Shift+Left move left
    #bindsym $mod+Shift+Down move down
    #bindsym $mod+Shift+Up move up
    #bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    ## switch to workspace
    #bindsym $mod+1 workspace 1
    #bindsym $mod+2 workspace 2
    #bindsym $mod+3 workspace 3
    #bindsym $mod+4 workspace 4
    #bindsym $mod+5 workspace 5
    #bindsym $mod+6 workspace 6
    #bindsym $mod+7 workspace 7
    #bindsym $mod+8 workspace 8
    #bindsym $mod+9 workspace 9
    #bindsym $mod+0 workspace 10
    ## move focused container to workspace
    #bindsym $mod+Shift+1 move container to workspace 1
    #bindsym $mod+Shift+2 move container to workspace 2
    #bindsym $mod+Shift+3 move container to workspace 3
    #bindsym $mod+Shift+4 move container to workspace 4
    #bindsym $mod+Shift+5 move container to workspace 5
    #bindsym $mod+Shift+6 move container to workspace 6
    #bindsym $mod+Shift+7 move container to workspace 7
    #bindsym $mod+Shift+8 move container to workspace 8
    #bindsym $mod+Shift+9 move container to workspace 9
    #bindsym $mod+Shift+0 move container to workspace 10
    ## Note: workspaces can have any name you want, not just numbers.
    ## We just use 1-10 as the default.

    # Workspace names
    set $ws1 1▪alpha
    set $ws2 2▪beta
    set $ws3 3▪gamma
    set $ws4 4▪delta
    set $ws5 5▪epsilon
    set $ws6 6▪pi
    set $ws7 7▪omega
    set $ws8 8▪phlange
    set $ws9 9▪squirrelbacon
    set $ws10 10▪operand
    set $ws11 [▪clango
    set $ws12 "]▪sadrobot"

    # Assign workspaces to outputs
{%@@ if profile == 'DE2NTB0027' @@%}
    workspace $ws1 output "Ancor Communications Inc MX279 DALMRS001872"
    workspace $ws2 output "Ancor Communications Inc MX279 DALMRS001872"
    workspace $ws3 output "Ancor Communications Inc MX279 DALMRS001872"
    workspace $ws4 output "Ancor Communications Inc MX279 DALMRS001872"
    workspace $ws5 output "Ancor Communications Inc MX279 DALMRS001872"
    workspace $ws6 output "Ancor Communications Inc MX279 FCLMRS003146"
    workspace $ws7 output "Ancor Communications Inc MX279 FCLMRS003146"
    workspace $ws8 output "Ancor Communications Inc MX279 FCLMRS003146"
    workspace $ws9 output "Ancor Communications Inc MX279 FCLMRS003146"
    workspace $ws10 output "Ancor Communications Inc MX279 FCLMRS003146"
    workspace $ws11 output eDP-1
    workspace $ws12 output eDP-1
{%@@ else @@%}
    workspace $ws1 output eDP-1
    workspace $ws2 output eDP-1
    workspace $ws3 output eDP-1
    workspace $ws4 output eDP-1
    workspace $ws5 output eDP-1
    workspace $ws6 output DP-1
    workspace $ws7 output DP-1
    workspace $ws8 output DP-1
    workspace $ws9 output DP-1
    workspace $ws10 output DP-1
    workspace $ws11 output DP-1
    workspace $ws12 output DP-1
{%@@ endif @@%}

    # switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    bindsym $mod+bracketleft workspace $ws11
    bindsym $mod+bracketright workspace $ws12

    # Move focused container to workspace
    bindsym $mod+Ctrl+1 move container to workspace $ws1
    bindsym $mod+Ctrl+2 move container to workspace $ws2
    bindsym $mod+Ctrl+3 move container to workspace $ws3
    bindsym $mod+Ctrl+4 move container to workspace $ws4
    bindsym $mod+Ctrl+5 move container to workspace $ws5
    bindsym $mod+Ctrl+6 move container to workspace $ws6
    bindsym $mod+Ctrl+7 move container to workspace $ws7
    bindsym $mod+Ctrl+8 move container to workspace $ws8
    bindsym $mod+Ctrl+9 move container to workspace $ws9
    bindsym $mod+Ctrl+0 move container to workspace $ws10
    bindsym $mod+Ctrl+bracketleft move container to workspace $ws11
    bindsym $mod+Ctrl+bracketright move container to workspace $ws12

    # Move to workspace with focused container
    bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws10; workspace $ws10
    bindsym $mod+Shift+bracketleft move container to workspace $ws11; workspace $ws11
    bindsym $mod+Shift+bracketright move container to workspace $ws12; workspace $ws12

#
# Layout stuff:
#
set $mode_layout [layout] split (h)orizontal, split (v)ertical, (s)tacking layout, (t)abbed layout, toggle s(p)lit
mode "$mode_layout" {
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym h splith; mode "default"
    bindsym v splitv; mode "default"

    # Switch the current container between different layout styles
    bindsym s layout stacking; mode "default"
    bindsym t layout tabbed; mode "default"
    bindsym p layout toggle split; mode "default"

    # exit layout mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+y mode "$mode_layout"

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+Ctrl+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+grave move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+grave scratchpad show

#
# Shut down, restart and locking features
#
set $mode_system [system] (l)ock, (e)xit sway, reload sway (c)onfiguration, (r)estart sway, toggle status (b)ar, switch (Shift+U)ser, (Shift+S)uspend, (Shift+H)ibernate, (Shift+R)eboot, reboot to (Shift+W)indows, (Shift+P)oweroff
bindsym $mod+a mode "$mode_system"
mode "$mode_system" {
    # lock the screen
    bindsym l exec --no-startup-id ~/bin/swayexit lock, mode "default"
    # log out (exit sway)
    bindsym e exec --no-startup-id ~/bin/swayexit logout, mode "default"
    # reload the configuration file
    bindsym c reload
    # restart sway inplace (preserves your layout/session, can be used to upgrade sway)
    bindsym r restart
    # hide/unhide swaystatus bar
    bindsym b bar mode toggle, mode "default"

    bindsym Shift+u exec --no-startup-id ~/bin/swayexit switch_user, mode "default"
    bindsym Shift+s exec --no-startup-id ~/bin/swayexit suspend, mode "default"
    bindsym Shift+h exec --no-startup-id ~/bin/swayexit hibernate, mode "default"
    bindsym Shift+r exec --no-startup-id ~/bin/swayexit reboot, mode "default"
    bindsym Shift+w exec --no-startup-id ~/bin/swayexit reboot-windows, mode "default"
    bindsym Shift+p exec --no-startup-id ~/bin/swayexit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

#
# Screenshots
#
set $mode_screenshot [screenshot] full (s)creen, current (w)indow, select (a)rea
bindsym Print mode "$mode_screenshot"
mode "$mode_screenshot" {
    # Screenshots
    bindsym s exec --no-startup-id grimshot --notify save screen, mode "default"
    bindsym w exec --no-startup-id grimshot --notify save active, mode "default"
    bindsym a exec --no-startup-id grimshot --notify save area, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

#
# Resizing containers:
#
set $mode_resize [resize] h/s, Left/Right: shrink/grow window width; n/t, Up/Down: shrink/grow height
bindsym $mod+r mode "$mode_resize"
mode "$mode_resize" {
    bindsym h resize shrink width 5 px or 5 ppt
    bindsym t resize grow height 5 px or 5 ppt
    bindsym n resize shrink height 5 px or 5 ppt
    bindsym s resize grow width 5 px or 5 ppt

    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # exit resize mode: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

#
# Literal mode: disable all key bindings except `Escape`
#
set $mode_literal [literal mode]
bindsym $mod+v mode "$mode_literal"
mode "$mode_literal" {
    bindsym Escape mode "default"
}

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}

#
# Theme colors:
#
# class                 border    backgr.   text    indic.  child_border
client.focused          #808280DD #808280CC #000000 #FDF6E3 #808280BB
client.focused_inactive #434745DD #434745CC #000000 #454948 #434745BB
client.unfocused        #000000CC #000000BB #16A085 #454948 #434745AA
client.urgent           #CB4B16DD #FDF6E3CC #16A085 #268BD2 #FDF6E3BB
client.placeholder      #000000DD #0C0C0CCC #FFFFFF #000000 #0C0C0CBB

client.background       #2B2C2BAA

# Enable xwayland
xwayland enable

#
# Window-specific settings:
#
for_window [title="^nmtui$"] floating enable, sticky enable
# Mark xwayland windows
for_window [shell=".*"] title_format "%title :: %shell"


#
# Startup:
#
exec dbus-update-activation-environment --systemd PATH DISPLAY WAYLAND_DISPLAY SWAYSOCK XCURSOR_SIZE XCURSOR_THEME XDG_SESSION_TYPE
exec /usr/bin/lxqt-policykit-agent

exec swayidle -w \
         before-sleep 'loginctl lock-session $XDG_SESSION_ID' \
         lock '{{@@ env['HOME'] @@}}/bin/swayexit lock'

exec blueman-applet


include /etc/sway/config.d/*

# vim: et sw=4 ts=4 sts=4
